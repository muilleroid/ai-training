services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - '3000:3000'
    environment:
      - APPLICATION_PORT=3000
      - DATABASE_URL=postgres://postgres:postgres@postgres:5432/postgres
      - JWT_SECRET=secret
      - JWT_EXPIRATION=7d
      - OTEL_OTLP_ENDPOINT=http://jaeger:4318/v1/traces
      - OTEL_SERVICE_NAME=app
    depends_on:
      jaeger:
        condition: service_started
      migrations:
        condition: service_completed_successfully
      postgres:
        condition: service_healthy

  migrations:
    image: oven/bun:1.2.13-alpine
    entrypoint: ['/bin/ash', '/usr/src/migrations/entrypoint.sh']
    working_dir: /usr/src/migrations
    environment:
      - DATABASE_URL=postgres://postgres:postgres@postgres:5432/postgres
    volumes:
      - ./docker/migrations/entrypoint.sh:/usr/src/migrations/entrypoint.sh
      - ./drizzle:/usr/src/migrations/drizzle
      - ./drizzle.config.ts:/usr/src/migrations/drizzle.config.ts
    depends_on:
      postgres:
        condition: service_healthy

  postgres:
    image: postgres:latest
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres
    ports:
      - '5432:5432'
    volumes:
      - ./data/postgres:/var/lib/postgresql/data
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U postgres']
      interval: 10s
      timeout: 1s
      retries: 5

  jaeger:
    image: jaegertracing/all-in-one:latest
    restart: always
    environment:
      - COLLECTOR_OTLP_HTTP_HOST_PORT=0.0.0.0:4318
    ports:
      - '16686:16686'
      - '4318:4318'
